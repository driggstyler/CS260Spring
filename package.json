{
  "name": "startup",
  "version": "1.0.0",
  "description": "Repository for the StartUp after first creating it in the CS 260 Spring class.\r ## Description Deliverable\r ### Elevator Pitch\r Scattergories is an absolute must for those who enjoy creative word games with friends. In this game you have a list of descriptions or things and a blank list next to it. A random letter is rolled and you are trying to come up with words that start with that letter and that each match one of the items on the list of descriptions. You canâ€™t use the same word more than once. After time runs out, you get a point for each word you got. If you and another player get the same word for a list item, neither of you get the point. This game is normally played at a table in person, but with this online version, you can play with friends across the world and compare highscores with one another. All you need is an email to login and you are ready to go!\r ### Key Features\r - Login using your email through HTTPS.\r - Ability to connect with other users to play in real time.\r - A leaderboard to shoe the high scores.\r ### Using each of the technologies discussed in class\r - **HTML** - The basic structure of all webpages, it will also be the main structure of my website, using a few links to other pages on my site to get to login, leaderboards, the game iteself, and any other utility pages in between.\r - **CSS** - To style the pages to make it feel like the word game at your table.\r - **Javascript** - To generate letters, compare player's lists, and implement a voting system for the player's inputed words, among other things.\r - **Webservice** - Talking to the server to send scores and votes.\r - **Authentication** - Using inputed emails to create logins for new users. (Though an email may not be necessary)\r - **Database persistence** - Using a database on my machine to store the highscores of all time. (Or possibly just in a certain times frame, like of the month or something)\r - **Web Socket** - Sending information from the server to players, such as the highscores on the leaderboard, vote results for the words, and any other needed utilities.\r - **Web Framework** - Using react to handle routing.\r ### Rough Sketches Of The Pages\r The main Game Page during a round of the game.\r ![Screenshot (161)](https://github.com/driggstyler/StartUp/assets/99686819/e5bf70c0-d10f-46da-8187-dd06d9bb9640)\r The Login Page.\r ![Screenshot (162)](https://github.com/driggstyler/StartUp/assets/99686819/3ccf10d3-8af6-4b6f-b0b4-fa0f99e79598)\r Voting Page in bewteen rounds.\r ![Screenshot (160)](https://github.com/driggstyler/StartUp/assets/99686819/23d043a8-a14a-4f37-86fe-2ffd98cc1b1f)\r * Note that two of these pages should have the outline of a website tab, but I could not find the tool needed to make other outlines, so I went the next best thing.\r # HTML Deliverable\r ## Simon deliverable\r Simon HTML was done before anything else, helped to review how to go between Visual Studio Code and github.\r ## Github link\r A link is provided on the first page (index.html) to be able to see the github repository containing this project.\r ## HTML Pages\r I've gone from 3 to 8 HTML pages to fulfil other functions of this wbesite, the website now includes the following HTML pages:\r - index.html (login screen)\r - home.html\r - leaderboards.html\r - howToPlay.html\r - lobby.html\r - game.html\r - voting.html\r - endgame.html\r ## Links between pages\r The are links for the actual website for it's needed functions, and \"temporary links\" to be able to navigate without needing other services or javascript like the ability to log in.\r ## Application textual content\r These include but not limited to username, instructions, word lists, and places to input word answers.\r ## Placeholder for third party service calls\r Logging/Registering have placehoder pieces for the third party service call, and temporary links to go through the game without needing other players (peer to peer conections).\r ## Application images\r Added Scattergories Logo.\r ## Login placeholder, including name display\r The first page is a login/register page, and the username will be displayed at the top of the page once logged in (CaptainKrunch436 is the placeholder username).\r ## Database placeholder\r The Leaderboards page has a tamporary table showing the \"current\" top players.\r ## Websocket data placeholder\r The voting page has the voting option placeholders to showcase realtime voting.\r # CSS Deliverable\r ## Simon CSS\r Deployed and working\r ## Link to my repository\r Still there from HTML deliverable.\r ## Header, Footer, And Main Content Body\r ### Header details\r Red background with Scaterrgories logo and on some pages a menu (hyperlinks are not default color).\r ### Main Content Body\r White background with Black text and matching black borders for the boxes containing the text. Hyperlinks are not default color and turn red when hovered over. Text is centered on the page along with text input elements.\r ### Footer\r Grey background with disclaimer and link to repository. (hyperlinks are not default color).\r ### Navigation elements\r Menu in header piece have hyperlinks that are not the default color, and are centered in a row below the Title of the page.\r Other links like those in the homepage and the temporary ones to navigate triggered pages are patterned like the menu links: black text that turns red when hovered over.\r ### Responsive window sizing\r Pages keep elements centered in various sized windows.\r ### Application Elements, Text Content, And Images\r Elements are often in a black border box and are arranged to align center with header texts. \r he text is black and hyperlinks turn red when hovered over. Text is also centered in the appropriate places and text input fields line up where they should.\r The Scattergories logo image is present at the top of every page.\r ### Git commits\r More git commmits were used to show progress.",
  "main": "endgame.js",
  "scripts": {},
  "keywords": [],
  "author": "",
  "license": "ISC",
  "devDependencies": {
    "@playwright/test": "^1.35.1"
  },
  "dependencies": {
    "express": "^4.18.2"
  }
}
